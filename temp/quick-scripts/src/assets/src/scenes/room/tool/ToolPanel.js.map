{"version":3,"sources":["assets\\src\\scenes\\room\\tool\\ToolPanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gCAA+B;AAC/B,iEAAgE;AAE1D,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA+B,6BAAY;IAA3C;QAAA,qEAgDC;QA7CW,kBAAY,GAAY,IAAI,CAAC;QAE7B,YAAM,GAAG,KAAK,CAAC;;IA2C3B,CAAC;IAzCU,wBAAI,GAAX;QACI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IAEM,yBAAK,GAAZ;QACI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAEM,0BAAM,GAAb;QACI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC;IAEM,wBAAI,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IAC5B,CAAC;IAEM,wBAAI,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,+BAAW,GAAlB,UAAmB,MAAiB,EAAE,QAAgB;QAClD,IAAI,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,KAAK,GAAG,IAAI,+BAAc,CAAC,+BAAc,CAAC,KAAK,CAAC,CAAC;QACrD,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAEM,2BAAO,GAAd;QACI,IAAI,KAAK,GAAG,IAAI,+BAAc,CAAC,+BAAc,CAAC,KAAK,CAAC,CAAC;QACrD,KAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAEM,+BAAW,GAAlB,UAAmB,MAAiB,EAAE,QAAgB;QAClD,IAAI,KAAK,GAAG,IAAI,+BAAc,CAAC,+BAAc,CAAC,KAAK,CAAC,CAAC;QACrD,KAAK,CAAC,KAAK,GAAG,CAAC,QAAQ,CAAC;QACxB,KAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IA3CD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;mDACmB;IAH5B,SAAS;QADrB,OAAO;OACK,SAAS,CAgDrB;IAAD,gBAAC;CAhDD,AAgDC,CAhD8B,EAAE,CAAC,SAAS,GAgD1C;AAhDY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["import { G } from \"../../../G\";\nimport { SketchpadEvent } from \"../../../events/SketchpadEvent\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class ToolPanel extends cc.Component {\n\n    @property(cc.Node)\n    private switchButton: cc.Node = null;\n\n    private isOpen = false;\n\n    public open() {\n        this.switchButton.getComponent(cc.Animation).play(\"tool_open\");\n        this.isOpen = true;\n    }\n\n    public close() {\n        this.switchButton.getComponent(cc.Animation).play(\"tool_close\");\n        this.isOpen = false;\n    }\n\n    public switch() {\n        this.isOpen ? this.close() : this.open();\n    }\n\n    public show() {\n        this.node.active = true;\n    }\n\n    public hide() {\n        this.node.active = false;\n        this.close();\n    }\n\n    public onColorPick(toggle: cc.Toggle, colorHex: string) {\n        let color = \"#\" + toggle.node.color.toHEX(\"#rrggbb\");\n        let event = new SketchpadEvent(SketchpadEvent.COLOR);\n        event.hexColor = color;\n        G.dispatchEvent(event);\n    }\n\n    public onClear() {\n        let event = new SketchpadEvent(SketchpadEvent.CLEAR);\n        G.dispatchEvent(event);\n    }\n\n    public onWidthPick(toggle: cc.Toggle, widthStr: string) {\n        let event = new SketchpadEvent(SketchpadEvent.WIDTH);\n        event.width = +widthStr;\n        G.dispatchEvent(event);\n    }\n\n}"]}