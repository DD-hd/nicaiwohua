{"version":3,"sources":["assets\\src\\scenes\\register\\RegisterScene.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6BAA4B;AAC5B,2CAA0C;AAEpC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAmC,iCAAY;IAA/C;QAAA,qEAoDC;QAjDW,gBAAU,GAAe,IAAI,CAAC;QAE9B,mBAAa,GAAe,IAAI,CAAC;QAEjC,cAAQ,GAAe,IAAI,CAAC;QAE5B,qBAAe,GAAe,IAAI,CAAC;QAEnC,oBAAc,GAAY,IAAI,CAAC;QAE/B,uBAAiB,GAAY,IAAI,CAAC;;IAuC9C,CAAC;IArCG,6BAAK,GAAL;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,qCAAa,GAAb;QACI,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QACzC,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChC,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;QACvC,IAAI,QAAQ,KAAK,EAAE,IAAI,IAAI,KAAK,EAAE,IAAI,IAAI,KAAK,EAAE,EAAE;YAC/C,KAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SACrC;aAAM,IAAI,IAAI,KAAK,IAAI,EAAE;YACtB,KAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACjC;aAAM;YACH,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YACrC,IAAI,MAAM,GAAG;gBACT,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aACb,CAAA;YACD,KAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;SAChC;IACL,CAAC;IAEO,2CAAmB,GAA3B;QACI,KAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAEO,wCAAgB,GAAxB;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAEO,oCAAY,GAApB;QACI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAC9E,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACpF,KAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IA/CD;QADC,QAAQ,CAAC,uBAAU,CAAC;qDACiB;IAEtC;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;wDACoB;IAEzC;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;mDACe;IAEpC;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;0DACsB;IAE3C;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;yDACqB;IAEvC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;4DACwB;IAbjC,aAAa;QADzB,OAAO;OACK,aAAa,CAoDzB;IAAD,oBAAC;CApDD,AAoDC,CApDkC,EAAE,CAAC,SAAS,GAoD9C;AApDY,sCAAa","file":"","sourceRoot":"/","sourcesContent":["import { G } from \"../../G\";\nimport { HeadSelect } from \"./HeadSelect\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport class RegisterScene extends cc.Component {\n\n    @property(HeadSelect)\n    private headSelect: HeadSelect = null;\n    @property(cc.EditBox)\n    private usernameInput: cc.EditBox = null;\n    @property(cc.EditBox)\n    private pwdInput: cc.EditBox = null;\n    @property(cc.EditBox)\n    private pwdConfirmInput: cc.EditBox = null;\n    @property(cc.Node)\n    private registerButton: cc.Node = null;\n    @property(cc.Node)\n    private returnLoginButton: cc.Node = null;\n\n    start() {\n        this.addListeners();\n    }\n\n    onBtnRegister() {\n        let username = this.usernameInput.string;\n        let pwd1 = this.pwdInput.string;\n        let pwd2 = this.pwdConfirmInput.string;\n        if (username === \"\" || pwd1 === \"\" || pwd2 === \"\") {\n            G.gameRoot.showTip(\"用户名和密码不能为空！\");\n        } else if (pwd1 !== pwd2) {\n            G.gameRoot.showTip(\"两次密码不同！\");\n        } else {\n            let head = this.headSelect.getHead();\n            let params = {\n                username: username,\n                password: pwd1,\n                head: head\n            }\n            G.ws.emit(\"register\",params);\n        }\n    }\n\n    private onWsRegisterSuccess() {\n        G.gameRoot.showTip(\"注册成功\");\n    }\n\n    private onBtnReturnLogin() {\n        cc.director.loadScene(\"login\");\n    }\n\n    private addListeners() {\n        this.registerButton.on(cc.Node.EventType.TOUCH_END, this.onBtnRegister, this);\n        this.returnLoginButton.on(cc.Node.EventType.TOUCH_END, this.onBtnReturnLogin, this);\n        G.ws.on(\"register\", this.onWsRegisterSuccess, this);\n    }\n\n}"]}