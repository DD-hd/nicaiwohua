{"version":3,"sources":["assets\\src\\utils\\NextHttp.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export class NextHttp {\n    private serverAddress = \"https://127.0.0.1:1323/\";\n    private action: IApiMethod;\n    private api: string;\n    private apiParams: IApiParams;\n    private token: string = '';\n    private successCallback: IApiSuccessFunction;\n    private errorCallback: IApiErrorFunction;\n    private metaCallback: IApiMetaFunction;\n\n    public constructor(serverAddress?:string) {\n        if(serverAddress){\n            this.serverAddress = serverAddress;\n        }\n    }\n\n    public updateToken(token:string) {\n        this.token = token;\n    }\n\n    public get(name: string, params: IApiParams, successCb?: IApiSuccessFunction, errorCb?: IApiErrorFunction){\n        this.action = 'get';\n        this.api = name;\n        this.apiParams = params;\n        this.successCallback = successCb;\n        this.errorCallback = errorCb;\n        this.send();\n    }\n\n    public post(name: string, params: IApiParams, successCb?: IApiSuccessFunction, errorCb?: IApiErrorFunction){\n        this.action = 'post';\n        this.api = name;\n        this.apiParams = params;\n        this.successCallback = successCb;\n        this.errorCallback = errorCb;\n        this.send();\n    }\n\n    private dealWithMeta(meta: Object) {\n\n    }\n\n    private send() {\n        // 参数检查\n        if (!this.action) throw new Error('Api action is not given!');\n        if (!this.api) throw new Error('Api name is not given!');\n        let action = this.action;\n        let api = this.api;\n        let params = this.apiParams || {};\n        let token = this.token;\n        let url = this.serverAddress + api;\n        if (token && !params.hasOwnProperty('token')) {\n            // params[\"_token\"] = token;\n        }\n\n        // 初始化XMLHttpRequest\n        let xmlHttp = new XMLHttpRequest();\n        let append = '';\n\n        for (let key in params) {\n            if (params.hasOwnProperty(key)) {\n                if (append !== '') {\n                    append += '&';\n                }\n                let param = params[key];\n                param = typeof param === \"object\" ? JSON.stringify(param) : param;\n                // URL发送数据时，+号和&号会丢失，因此应在发送前转换\n                if (typeof param === \"string\") {\n                    param = param.replace(/\\+/g, '%2B');\n                    param = param.replace(/&/g, '%26');\n                    param = encodeURIComponent(param);\n                }\n                append += key + '=' + param;\n            }\n        }\n\n        if (action === 'post') {\n            xmlHttp.open(action, url);\n        } else {\n            if (append !== '') {\n                xmlHttp.open(action, url + '?' + append);\n            } else {\n                xmlHttp.open(action, url);\n            }\n        }\n        xmlHttp.setRequestHeader('Authorization', 'Bearer ' + token);\n        xmlHttp.onreadystatechange = () => {\n            if (xmlHttp.readyState === 4) {\n                if (xmlHttp.status === 200) {\n                    let strData;\n                    // 若有返回结果\n                    if (xmlHttp.responseText.length >= 0) {\n                        try {\n                            strData = JSON.parse(xmlHttp.responseText);\n                        } catch (e) {\n                            cc.log('Response data is not in JSON format!');\n                            // Helper.log(xmlHttp.responseText);\n                        }\n                        // 若成功解析返回的数据\n                        if (strData) {\n                            // data: api返回数据的主要内容\n                            // meta: api返回的元数据，比如游戏状态改变，分页信息等等\n                            // error: api返回的错误信息\n                            let data, meta, error;\n                            if (strData.hasOwnProperty('meta') && strData['meta'] !== null) {\n                                meta = strData['meta'];\n                                this.dealWithMeta(meta);\n                            }\n                            if (strData.hasOwnProperty('data') && strData['data'] !== null) {\n                                if (this.successCallback) {\n                                    this.successCallback(strData['data']);\n                                }\n                            }\n                            if (strData.hasOwnProperty('error') && strData['error'] !== null) {\n                                error = strData['error'];\n                                if (this.errorCallback) {\n                                    this.errorCallback(error);\n                                } else {\n                                    cc.log('Unhandled Api Error!');\n                                }\n                            }\n                        } else {\n                            cc.log('Server Error!');\n                        }\n                    } else {\n                        cc.log('Can\\'t get the response data.');\n                        if (this.errorCallback) {\n                            this.errorCallback();\n                        }\n                    }\n                } else { //其它http状态码处理\n                    cc.log(xmlHttp.responseText);\n                }\n            } else { //其它request状态处理\n            }\n        };\n        if (action === 'post') {\n            xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n            xmlHttp.send(append);\n        } else {\n            xmlHttp.send();\n        }\n    }\n\n}"]}