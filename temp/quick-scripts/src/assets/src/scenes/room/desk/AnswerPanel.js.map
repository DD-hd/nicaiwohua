{"version":3,"sources":["assets\\src\\scenes\\room\\desk\\AnswerPanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gCAA+B;AAEzB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAiC,+BAAY;IAA7C;QAAA,qEAyCC;QAtCW,eAAS,GAAa,IAAI,CAAC;QAE3B,WAAK,GAAe,IAAI,CAAC;QAEzB,mBAAa,GAAc,IAAI,CAAC;QAEhC,iBAAW,GAAc,IAAI,CAAC;;IAgC1C,CAAC;IA9Ba,4BAAM,GAAhB;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,0BAAI,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAC7C,CAAC;IAEM,0BAAI,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEO,kCAAY,GAApB;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC/B,IAAG,MAAM,KAAK,EAAE,EAAC;YACb,KAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;IACL,CAAC;IAEO,gCAAU,GAAlB;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAEO,kCAAY,GAApB;QACI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACjF,CAAC;IArCD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;kDACgB;IAEnC;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;8CACY;IAEjC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;sDACoB;IAExC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;oDACkB;IAT7B,WAAW;QADvB,OAAO;OACK,WAAW,CAyCvB;IAAD,kBAAC;CAzCD,AAyCC,CAzCgC,EAAE,CAAC,SAAS,GAyC5C;AAzCY,kCAAW","file":"","sourceRoot":"/","sourcesContent":["import { G } from \"../../../G\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class AnswerPanel extends cc.Component {\n\n    @property(cc.Label)\n    private hintLabel: cc.Label = null;\n    @property(cc.EditBox)\n    private input: cc.EditBox = null;\n    @property(cc.Button)\n    private confirmButton: cc.Button = null;\n    @property(cc.Button)\n    private closeButton: cc.Button = null;\n\n    protected onLoad() {\n        this.addListeners();\n    }\n\n    public show() {\n        this.node.active = true;\n        this.hintLabel.string = G.room.getHint();\n    }\n\n    public hide() {\n        this.node.active = false;\n    }\n\n    private onBtnConfirm() {\n        let answer = this.input.string;\n        if(answer !== \"\"){\n            G.ws.emit(\"answer\",answer);\n            this.input.string = \"\";\n            this.hide();\n        }\n    }\n\n    private onBtnClose() {\n        this.hide();\n    }\n\n    private addListeners() {\n        this.confirmButton.node.on(cc.Node.EventType.TOUCH_END, this.onBtnConfirm, this);\n        this.closeButton.node.on(cc.Node.EventType.TOUCH_END, this.onBtnClose, this);\n    }\n}"]}