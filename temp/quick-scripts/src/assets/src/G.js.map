{"version":3,"sources":["assets\\src\\G.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAOA;IAAqB,0BAAc;IAAnC;QAAA,qEA2CC;QAvCU,cAAQ,GAAY,IAAI,CAAC;QAEzB,UAAI,GAAa,IAAI,CAAC;QACtB,QAAE,GAAkB,IAAI,CAAC;QAEzB,UAAI,GAAc,IAAI,CAAC;QACvB,UAAI,GAAc,IAAI,CAAC;;IAiClC,CAAC;IA/BU,4BAAW,GAAlB,UAAmB,QAAiB;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAEM,gCAAe,GAAtB;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAEM,+BAAc,GAArB,UAAsB,IAAI;QACtB,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAEM,gCAAe,GAAtB;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAEM,2BAAU,GAAjB;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAEM,4BAAW,GAAlB,UAAmB,IAAI;QACnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAEM,2BAAU,GAAjB;QACI,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAvCsB,eAAQ,GAAU,IAAI,MAAM,EAAE,CAAC;IAyC1D,aAAC;CA3CD,AA2CC,CA3CoB,EAAE,CAAC,WAAW,GA2ClC;AAEY,QAAA,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC","file":"","sourceRoot":"/","sourcesContent":["import { NextStore } from \"./utils/NextStore\";\nimport { NextHttp } from \"./utils/NextHttp\";\nimport { NextWebSocket } from \"./utils/NextWebSocket\";\nimport { UserModel } from \"./models/UserModel\";\nimport { RoomModel } from \"./models/RoomModel\";\nimport { GameRoot } from \"./scenes/GameRoot\";\n\nclass Global extends cc.EventTarget{\n\n    public static readonly Instance:Global = new Global();\n\n    public gameRoot:GameRoot = null;\n    \n    public http: NextHttp = null;\n    public ws: NextWebSocket = null;\n\n    public user: UserModel = null;\n    public room: RoomModel = null;\n\n    public setGameRoot(gameRoot:GameRoot) {\n        this.gameRoot = gameRoot;\n    }\n\n    public onLodingSuccess() {\n        cc.director.loadScene(\"login\");\n    }\n\n    public onLoginSuccess(user) {\n        cc.log(user);\n        this.user.setUser(user);\n        cc.director.loadScene(\"hall\");\n    }\n\n    public onEnterRegister() {\n        cc.director.loadScene(\"register\");\n    }\n\n    public onHallExit() {\n        cc.director.loadScene(\"login\");\n    }\n\n    public onEnterRoom(data) {\n        this.room.setRoom(data);\n        cc.director.loadScene(\"room\");\n    }\n\n    public onExitRoom() {\n        cc.director.loadScene(\"hall\");\n    }\n\n}\n\nexport const G = Global.Instance;"]}